/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package guinew;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import java.util.Calendar;
import java.util.Locale;


/**
 *
 * @author Mohamed Aref
 */
public class test extends javax.swing.JFrame {

  
    
      DefaultTableModel model;
  Connection con;
  Statement stmt;
  ResultSet rs;
    public test() throws SQLException {
        initComponents();
          connecToSql();
    }
    
    
   
          public void connecToSql() throws SQLException{
              
          String txtDate=new SimpleDateFormat("dd mm yyyy").format(new Date());
         
          
      model=new DefaultTableModel();
      model.addColumn("testid");
      model.addColumn("testtname");
      model.addColumn("testdate");
      model.addColumn("testresult");
   

      testtable.setModel(model);
      
      
       String path="jdbc:sqlserver://localhost:1433;databaseName=hospital"; 
        String user="ahmedaref";
        String pass="1234";
        try{
        con=DriverManager.getConnection(path, user, pass);
        stmt=con.createStatement();
        rs=stmt.executeQuery("select*from test");
        while(rs.next()){
            model.addRow(new Object[]{rs.getInt("test_id"),rs.getString("t_name"),rs.getString("t_date"),rs.getString("rsult")});
        }
        
            
        }catch(SQLException e) {
          
            System.out.println("connection is field");
             
            
        }
        }
    
    
    
    
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        testtable = new javax.swing.JTable();
        inset = new javax.swing.JButton();
        update = new javax.swing.JButton();
        delet = new javax.swing.JButton();
        search = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        idinput = new javax.swing.JTextField();
        nameinput = new javax.swing.JTextField();
        dateinput = new javax.swing.JTextField();
        resultinput = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        testtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(testtable);

        inset.setText("insert");
        inset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insetActionPerformed(evt);
            }
        });

        update.setText("update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        delet.setText("delet");
        delet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletActionPerformed(evt);
            }
        });

        search.setText("serach");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        exit.setText("exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        jLabel1.setText("test_id");

        jLabel2.setText("t_name");

        jLabel3.setText("t_date");

        jLabel4.setText("t_resulte");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(idinput)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(inset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(update)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameinput, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(dateinput, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(resultinput))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(delet)
                            .addGap(18, 18, 18)
                            .addComponent(search))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(exit)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idinput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameinput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateinput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resultinput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inset)
                    .addComponent(update)
                    .addComponent(delet)
                    .addComponent(search)
                    .addComponent(exit)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void insetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insetActionPerformed

         int test_id=Integer.parseInt(idinput.getText());
         String t_name=nameinput.getText();
         String t_date=dateinput.getText();
         String rsult=resultinput.getText();
      
         
         String query="insert into test values("+test_id +",'" +t_name +" ','"+t_date+ "','" +rsult+"')";
         
         try{
             
             stmt.executeUpdate(query);
             model.addRow(new Object[]{test_id,t_name,t_date,rsult});
                    System.out.println("inserted");
             
         }catch(SQLException ex){
             
             Logger.getLogger(test.class.getName()).log(Level.SEVERE,null, ex);
              System.out.println("insert is fsild");
         }    
        
        
        
        
    }//GEN-LAST:event_insetActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // TODO add your handling code here
System.exit(0);
        
    }//GEN-LAST:event_exitActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
         int  test_id=Integer.parseInt(idinput.getText());
      String t_name=nameinput.getText();
      String t_date=dateinput.getText();  
      String result=resultinput.getText();
      
            String sql="update test set [t_name]" + " ='"+ t_name + "',[t_date]='"+t_date+"'"
                    + ",[rsult]"+"='"+result+"'"+"where test_id ='"+test_id+"'";
            try {
                
                stmt.executeUpdate(sql);
                
                System.out.println("update is done");
                
            }catch(SQLException ex){
                
                System.out.println("update is faild");                
                
            }
        
        
        
    }//GEN-LAST:event_updateActionPerformed

    private void deletActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletActionPerformed
        // TODO add your handling code here:
        
        
         int id=Integer.parseInt(idinput.getText());
    try{
        
        
        stmt.executeUpdate("delete from test where test_id="+id);
        
        System.out.println("delete is done");
    }catch(SQLException ex){
        Logger.getLogger(test.class.getName()).log(Level.SEVERE, null,ex);
        System.out.println("delete is faild");
    }
    model.removeRow(id);
    }//GEN-LAST:event_deletActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
        
        
           String test_id=idinput.getText();
        String query="select*from test where test_id='"+test_id+"'";
        try{
            rs=stmt.executeQuery(query);
            int countl=model.getRowCount();
            for(int i=0;i<countl;i++){
                model.removeRow(0);
            }
            while(rs.next()){
            model.addRow(new Object[]{rs.getInt("test_id"),rs.getString("t_name"),rs.getString("t_date"),rs.getString("rsult")});
                System.out.println("searched is done ");
            }
            
        }catch(SQLException ex){
             
                    System.out.println("search is faild");
                    
             } 
    }//GEN-LAST:event_searchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new test().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(test.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField dateinput;
    private javax.swing.JButton delet;
    private javax.swing.JButton exit;
    private javax.swing.JTextField idinput;
    private javax.swing.JButton inset;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameinput;
    private javax.swing.JTextField resultinput;
    private javax.swing.JButton search;
    private javax.swing.JTable testtable;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
